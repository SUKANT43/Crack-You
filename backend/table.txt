index is like a inbuild function that is used by aggregate for exampele
db.orders.aggregate([
  { $match: { status: "pending" } },
  { $sort: { createdAt: -1 } },
  { $limit: 10 }
])
db.users.aggregate([
  {
    $lookup: {
      from: "orders",           // The second collection name
      localField: "email",      // Field in the current (users) collection
      foreignField: "userEmail",// Field in the "orders" collection
      as: "orderDetails"        // Output array field
    }
  }
])

ðŸ”µ 2xx â€” Success (Client Request Worked)
200 OK â†’ Request was successful (most common).

201 Created â†’ Resource was created (e.g., after a POST).

204 No Content â†’ Successful but no response body.

ðŸŸ¡ 4xx â€” Client Errors (User/Request Mistakes)
These mean the client (frontend/user) did something wrong:

400 Bad Request â†’ Request is malformed (e.g., missing fields, wrong format).

401 Unauthorized â†’ Not logged in / missing token.

403 Forbidden â†’ Logged in but not allowed to access this resource.

404 Not Found â†’ Resource doesnâ€™t exist.

409 Conflict â†’ Resource conflict (e.g., user already exists).

ðŸ”´ 5xx â€” Server Errors
These mean the server (backend) messed up:

500 Internal Server Error â†’ Generic server error.

502 Bad Gateway â†’ Invalid response from an upstream server.

503 Service Unavailable â†’ Server is down or overloaded.

504 Gateway Timeout â†’ Server took too long to respond.


